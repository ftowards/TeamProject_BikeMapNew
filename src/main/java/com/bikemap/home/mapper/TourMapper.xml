<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  <mapper namespace="com.bikemap.home.tour.TourDaoImp">
 	<select id="selectAllTour" resultType="com.bikemap.home.tour.TourVO" parameterType="com.bikemap.home.tour.PagingVO">
		select * from 
			(select * from 
				(select noboard, title, to_char(departure,'YY/MM/DD') departure, to_char(arrive,'YY/MM/DD') arrive, reference from tour
				where state = '1'	order by noboard desc)
 			where rownum <![CDATA[<= ]]> (#{nowPage} * #{onePageRecord}) order by noboard asc)
		where rownum <![CDATA[<= ]]> #{lastPageRecordCount} order by noboard desc 
	</select>
	<select id="selectTour" resultType="com.bikemap.home.tour.TourVO" parameterType="com.bikemap.home.tour.PagingVO">
		select * from 
			(select * from 
				(select noboard, title, to_char(departure,'YY/MM/DD') departure, to_char(arrive,'YY/MM/DD') arrive, reference from tour
					where state = '1'
					<if test='regage != null and regage neq ""'>
			 			and regage like '%'||#{regage}||'%' and reggender like '%'||#{reggender}||'%' 
				 	</if>
				 	<if test='departuredate neq null and !"".equals(departuredate)'>
				 		and departure <![CDATA[>= ]]> to_date(#{departure}, 'YYYY/MM/DD HH24') 
				 	</if>
				 	<if test='arrivedate neq null and !"".equals(arrivedate)'>
				 		and arrive <![CDATA[<= ]]> to_date(#{arrive}, 'YYYY/MM/DD HH24') 
				 	</if>	 		 	
				 	<if test='place neq null and place neq ""'>
				 		and place like '%'||#{place}||'%'
				 	</if>
				 	<if test="distance1 gt 0">
				 		and distance <![CDATA[>= ]]> ${distance1}
				 	</if>
				 	<if test="distance2 gt 0">
				 		and distance <![CDATA[<= ]]> ${distance2}
				 	</if>
				order by noboard desc)
 			where rownum <![CDATA[<= ]]> (#{nowPage} * #{onePageRecord}) order by noboard asc)
		where rownum <![CDATA[<= ]]> #{lastPageRecordCount} order by noboard desc 
	</select>
	<select id="getTotalTourRecord" resultType="int" parameterType="com.bikemap.home.tour.PagingVO">
	 	select count(noboard) from tour where state = '1'
	</select>
	<select id="getTourRecord" resultType="int" parameterType="com.bikemap.home.tour.PagingVO">
		select count(noboard) from tour
	 		where state = '1'
		 	<if test='regage != null and regage neq ""'>
		 		and regage like '%'||#{regage}||'%' and reggender like '%'||#{reggender}||'%' 
		 	</if>
		 	<if test='departuredate neq null and !"".equals(departuredate)'>
		 		and departure <![CDATA[>= ]]> to_date(#{departure}, 'YYYY/MM/DD HH24') 
		 	</if>
		 	<if test='arrivedate neq null and !"".equals(arrivedate)'>
		 		and arrive <![CDATA[<= ]]> to_date(#{arrive}, 'YYYY/MM/DD HH24') 
		 	</if>	 		 	
		 	<if test='place neq null and place neq ""'>
		 		and place like '%'||#{place}||'%'
		 	</if>
		 	<if test="distance1 gt 0">
		 		and distance <![CDATA[>= ]]> #{distance1}
		 	</if>
		 	<if test="distance2 gt 0">
		 		and distance <![CDATA[<= ]]> #{distance2}
		 	</if>		 	
	</select>
	<insert id="tourInsert" parameterType="com.bikemap.home.tour.TourVO">
		insert into tour(noboard, title, userid, reference, content, deadline, departure, arrive, place, distance, speed, budget, room, reggender, regage, ip)
		values(a_sq.nextval, #{title}, #{userid}, #{reference}, #{content}, to_date(#{deadline}, 'YYYY/MM/DD HH24'), to_date(#{departure}, 'YYYY/MM/DD HH24'), to_date(#{arrive}, 'YYYY/MM/DD HH24'), #{place}, 
		#{distance}, #{speed, jdbcType=VARCHAR}, #{budget, jdbcType=VARCHAR}, #{room}, #{reggender}, #{regage}, #{ip})
	</insert>
	<select id="tourSelect" parameterType="int" resultType="com.bikemap.home.tour.TourVO">
		select noboard, title, userid, reference, content, to_char(deadline,'YY/MM/DD HH24') deadline,to_char(departure,'YY/MM/DD HH24') departure,
		to_char(arrive,'YY/MM/DD HH24') arrive,	place, distance, speed, budget, room, reggender, regage 
	 	from tour where noboard = #{noboard}
	</select>
 	<select id="lastTourNo" resultType="int">
		select noboard from (select noboard from tour where userid = #{param1} order by 1 desc) where rownum = 1
	</select>
	<insert id="insertTourComplist" parameterType="com.bikemap.home.tour.ComplistVO">
		insert into complist(noboard, userid, state) values(#{noboard}, #{userid}, #{state})
	</insert>
	<select id="checkTourComplist" resultType="String" parameterType="com.bikemap.home.tour.ComplistVO">
		select state from complist where noboard =#{noboard} and userid = #{userid}
	</select>
	<delete id="cancelTour" parameterType="com.bikemap.home.tour.ComplistVO">
		delete from complist where noboard = #{noboard} and userid = #{userid}
	</delete>
	<select id="selectTourComplist" resultType="com.bikemap.home.tour.ComplistVO">
		select a.userid, trunc((to_number(to_char(sysdate, 'YYYY'))-to_number(to_char(b.birth, 'YYYY'))+1),-1) age,
		b.gender, b.tourcnt, b.heart, a.state from complist a join regist b on a.userid = b.userid where a.noboard = #{param1}
		order by a.state desc, userid asc
	</select>
	<select id="getDeadline" resultType="String">
		select to_char(deadline, 'YYYY/MM/DD/HH24') deadline from tour where noboard =#{param1}
	</select>
	<select id="checkTourRoom" resultType="int">
		select (room - b.party) margin from tour a 
		join (select noboard, count(userid) party from complist where state ='2' group by noboard) b on a.noboard = b.noboard
		where a.noboard = #{param1}
	</select>
	<select id="getMytourRecordCount" resultType="int" parameterType="com.bikemap.home.tour.TourListPagingVO">
		select count(noboard) from tour where userid = #{userid} and 
		<choose>
			<when test='tourState neq null and tourState eq "1"'>
				state = '1' and deadline <![CDATA[>]]> sysdate
			</when>
			<when test='tourState neq null and tourState eq "2"'>
				state = '1' and deadline <![CDATA[<=]]> sysdate
			</when>
			<when test='tourState neq null and tourState eq "3"'>
				state = '2'
			</when>
		</choose>
	</select>
	<select id="getApplytourRecordCount" resultType="int" parameterType="com.bikemap.home.tour.TourListPagingVO">
		select count(a.noboard) from tour a join complist b on a.noboard = b.noboard
		where a.userid <![CDATA[<>]]> #{userid} and b.userid = #{userid} and 
		<choose>
			<when test='applyState neq null and applyState eq "1"'>
				a.state = '1' and b.state = '1'
			</when>
			<when test='applyState neq null and applyState eq "2"'>
				a.state = '1' and b.state = '2'
			</when>
			<when test='applyState neq null and applyState eq "3"'>
				a.state = '2' and b.state = '2'
			</when>
		</choose>		
	</select>	
	<select id="selectMytourList" resultType="com.bikemap.home.tour.TourlistVO" parameterType="com.bikemap.home.tour.TourListPagingVO">
		select * from 
			(select * from	
			
		(select a.noboard, title, to_char(departure, 'YY-MM-DD HH24') departure, to_char(arrive, 'YY-MM-DD HH24') arrive, to_char(deadline, 'YY-MM-DD HH24') deadline,
			nvl(c.party, 0) party, (a.room - nvl(c.party,0)) margin, nvl(b.que,0) que from tour a
		left join (select noboard, count(userid) que from complist  where state ='1'  group by noboard) b on a.noboard = b.noboard
		left join (select noboard, count(userid) party from complist where state ='2' group by noboard) c on a.noboard = c.noboard
		where userid =#{userid} and 
		<choose>
			<when test='tourState neq null and tourState eq "1"'>
				state = '1' and deadline <![CDATA[>]]> sysdate
			</when>
			<when test='tourState neq null and tourState eq "2"'>
				state = '1' and deadline <![CDATA[<=]]> sysdate
			</when>
			<when test='tourState neq null and tourState eq "3"'>
				state = '2'
			</when>
		</choose>
				order by noboard desc)
 			where rownum <![CDATA[<= ]]> (#{nowPage} * #{onePageRecord}) order by noboard asc)
		where rownum <![CDATA[<= ]]> #{lastPageRecordCount} order by noboard desc 
	</select>
	<select id="selectApplytourList" resultType="com.bikemap.home.tour.TourlistVO" parameterType="com.bikemap.home.tour.TourListPagingVO">
		select * from 
			(select * from	
		
		(select c.noboard, c.userid, c.title, to_char(c.departure, 'YY-MM-DD HH24') departure, to_char(c.arrive, 'YY-MM-DD HH24') arrive, to_char(c.deadline, 'YY-MM-DD HH24') deadline,
		 nvl(e.party, 0) party, (c.room - nvl(e.party,0)) margin, nvl(d.que,0) que 
			from (select a.noboard, a.userid, title, departure, arrive, deadline, room from tour a join complist b on a.noboard = b.noboard
			where a.userid <![CDATA[<>]]> #{userid} and b.userid = #{userid} and
				<choose>
					<when test='applyState neq null and applyState eq "1"'>
						a.state = '1' and b.state = '1'
					</when>
					<when test='applyState neq null and applyState eq "2"'>
						a.state = '1' and b.state = '2'
					</when>
					<when test='applyState neq null and applyState eq "3"'>
						a.state = '2' and b.state = '2'
					</when>
				</choose>
			) c
			 left join (select noboard, count(userid) que from complist  where state ='1'  group by noboard) d on c.noboard = d.noboard
			 left join (select noboard, count(userid) party from complist where state ='2' group by noboard) e on c.noboard = e.noboard
		 
		 		order by noboard desc)
 			where rownum <![CDATA[<= ]]> (#{nowPage} * #{onePageRecord}) order by noboard asc)
		where rownum <![CDATA[<= ]]> #{lastPageRecordCount} order by noboard desc 
	</select>
	<update id="confirmComplist" parameterType="com.bikemap.home.tour.ComplistVO">
		update complist set state='2' where userid =#{userid} and noboard =#{noboard} and state ='1'
	</update>
	<update id="absentTour" parameterType="com.bikemap.home.tour.ComplistVO">
		update complist set state='3' where userid =#{userid} and noboard =#{noboard} and state ='2'
	</update>
	<update id="completeTour" >
		update tour set state = '2' where noboard = #{noboard}
	</update>
	<select id="selectCompleteList" resultType="String">
		select userid from complist where noboard =#{param1} and state ='2'
	</select>
	<update id="addTourcnt">
		update regist set tourcnt = tourcnt +1 where userid = #{param1}
	</update>
	<insert id="insertEvalList">
		insert into comprate(noboard, userid, object) values(#{param1}, #{param2}, #{param3})
	</insert>
	<select id="selectEvallist" resultType="com.bikemap.home.tour.ComplistVO" parameterType="com.bikemap.home.tour.ComplistVO">
		select a.object objid, trunc((to_number(to_char(sysdate, 'YYYY'))-to_number(to_char(b.birth, 'YYYY'))+1),-1) age,
			   b.gender, b.tourcnt, b.heart, a.eval from comprate a 
			join regist b on a.object = b.userid where a.noboard = #{noboard} and a.userid = #{userid} order by objid asc	
	</select>
	<update id="updateEvallist" parameterType="com.bikemap.home.tour.ComplistVO">
		update comprate set eval = 'Y' where noboard =#{noboard} and userid = #{userid} and object = #{objid}
	</update>
	<update id="addHeart">
		update regist set heart = heart + 1 where userid = #{param1}
	</update>
	<select id="selectTourCompState" resultType="int" parameterType="int">
		select count(noboard) from tour where state = '2' and noboard=#{noboard}
	</select>
	<select id="selectComplistChk" resultType="int" parameterType="int">
		select count(userid) from complist where noboard=#{noboard}
	</select>
	<delete id="deleteTourView">
		delete from tour where noboard=#{param1} and userid=#{param2}
	</delete>
	<select id="selectComplistExceptLogId" resultType="com.bikemap.home.tour.ComplistVO">
		select userid from complist where noboard=#{param1} and userid  <![CDATA[ <> ]]> logId
	</select>
	<select id="tourEditSelect" resultType="com.bikemap.home.tour.TourVO">
		select noboard, title, userid, reference, content, to_char(deadline,'YY/MM/DD HH24') deadline,to_char(departure,'YY/MM/DD HH24') departure,
		to_char(arrive,'YY/MM/DD HH24') arrive,	place, distance, speed, budget, room, reggender, regage 
	 	from tour where noboard = #{param1} and userid = #{param2}
	</select>
	<update id="updateTourView" parameterType="com.bikemap.home.tour.TourVO">
		update tour set title=#{title},content=#{content} where noboard=#{noboard} and userid=#{userid}
	</update>
 </mapper>